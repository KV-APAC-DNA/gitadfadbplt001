{
	"name": "dbt_backup",
	"properties": {
		"activities": [
			{
				"name": "audit start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": 0,
						"status": "START",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline is executing for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "audit success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "fail pipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": 0,
						"status": "FINISH",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline is completed for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "audit failure",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "get api token",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": {
							"value": "@pipeline().parameters.process_id",
							"type": "Expression"
						},
						"status": "FAIL",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline has failed for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "read parameters",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "audit start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "SELECT PARAMETER_GROUP_NAME,\n\"'transform_script'\" TRANSFORM_SCRIPT,\n\"'job_id'\" JOB_ID,\n\"'account_id'\" ACCOUNT_ID\nFROM\n(SELECT PARAMETERS.PARAMETER_NAME,PARAMETER_VALUE,PARAMETER_GROUP_NAME,IS_SENSITIVE,SNOWFLAKE_STAGE, SNOWFLAKE_FILE_FORMAT\nFROM META_RAW.PARAMETERS \nJOIN META_RAW.PROCESS USING (PARAMETER_GROUP_ID)\nWHERE PROCESS_ID = @{pipeline().parameters.process_id}\nAND IS_ACTIVE = TRUE\n)\nPIVOT(\nMAX(PARAMETER_VALUE) FOR PARAMETER_NAME IN (\n'transform_script','job_id','account_id')\n)",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "mtd_process",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "run dbt model",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "get account id",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get job id",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "get token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"method": "POST",
					"headers": {
						"Authorization": {
							"value": "Token @{variables('dbtapitoken')}",
							"type": "Expression"
						}
					},
					"url": {
						"value": "https://cloud.getdbt.com/api/v2/accounts/@{variables('accountid')}/jobs/@{variables('job_id')}/run/",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "AutoResolveIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"body": {
						"cause": "Triggered via API"
					}
				}
			},
			{
				"name": "audit failure on dbt call",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "run dbt model",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": 0,
						"status": "FAIL",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline has failed for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "error log 1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "run dbt model",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_error_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": {
							"value": "@pipeline().parameters.process_id",
							"type": "Expression"
						},
						"job_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"error_message": {
							"value": "@activity('run dbt model').error?.message",
							"type": "Expression"
						},
						"run_id": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						},
						"error_code": {
							"value": "@activity('run dbt model').error?.errorCode",
							"type": "Expression"
						},
						"job_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "get account id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "read parameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "accountid",
					"value": {
						"value": "@activity('read parameters').output.firstRow.account_id",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get job id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "read parameters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "job_id",
					"value": {
						"value": "@activity('read parameters').output.firstRow.job_id",
						"type": "Expression"
					}
				}
			},
			{
				"name": "get token",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "get api token",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "dbtapitoken",
					"value": {
						"value": "@activity('get api token').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "wait until job is complete",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "get run id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(variables('run_status'), 10)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "wait a while before checking status",
							"type": "Wait",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"waitTimeInSeconds": 20
							}
						},
						{
							"name": "get dbt job status",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "wait a while before checking status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"headers": {
									"Authorization": {
										"value": "Token @{variables('dbtapitoken')}",
										"type": "Expression"
									}
								},
								"url": {
									"value": "https://cloud.getdbt.com/api/v2/accounts/@{variables('accountid')}/runs/@{variables('run_id')}/",
									"type": "Expression"
								}
							}
						},
						{
							"name": "set status value",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "get dbt job status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "run_status",
								"value": {
									"value": "@activity('get dbt job status').output.data?.status",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "get run id",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "run dbt model",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "run_id",
					"value": {
						"value": "@activity('run dbt model').output.data?.id",
						"type": "Expression"
					}
				}
			},
			{
				"name": "fail pipeline",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "wait until job is complete",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(variables('run_status'),10)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "fail this job",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": {
									"value": "dbt job failed, check on run_id @{variables('run_id')} and rey",
									"type": "Expression"
								},
								"errorCode": "2002"
							}
						}
					]
				}
			},
			{
				"name": "audit failure of dbt status",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "fail pipeline",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": 0,
						"status": "FAIL",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline has failed for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "get api token",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "audit start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "https://kenvuekeyvault.vault.azure.net/secrets/dbttoken/?api-version=7.0",
						"type": "Expression"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			}
		],
		"parameters": {
			"category": {
				"type": "string"
			},
			"usecase_id": {
				"type": "int"
			},
			"sequence_id": {
				"type": "int"
			},
			"process_id": {
				"type": "int"
			},
			"phase_id": {
				"type": "int"
			}
		},
		"variables": {
			"dbt-result": {
				"type": "String"
			},
			"trans_script": {
				"type": "String"
			},
			"Isunknown": {
				"type": "Boolean"
			},
			"adls_container": {
				"type": "String"
			},
			"folder_path": {
				"type": "String"
			},
			"target_table": {
				"type": "String"
			},
			"target_schema": {
				"type": "String"
			},
			"file_spec": {
				"type": "String"
			},
			"stage": {
				"type": "String"
			},
			"file_format": {
				"type": "String"
			},
			"job_id": {
				"type": "String"
			},
			"accountid": {
				"type": "String"
			},
			"dbtapitoken": {
				"type": "String"
			},
			"isdbtcomplete": {
				"type": "Boolean",
				"defaultValue": false
			},
			"run_id": {
				"type": "Integer",
				"defaultValue": 0
			},
			"run_status": {
				"type": "Integer",
				"defaultValue": 0
			}
		},
		"folder": {
			"name": "Transformation/dbt"
		},
		"annotations": [],
		"lastPublishTime": "2023-11-28T12:20:59Z"
	}
}