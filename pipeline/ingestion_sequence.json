{
	"name": "ingestion_sequence",
	"properties": {
		"activities": [
			{
				"name": "get processes",
				"description": "Retrieve process records for the current sequence",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "audit start",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SnowflakeSource",
						"query": {
							"value": "SELECT *\nFROM META_RAW.PROCESS\nJOIN META_RAW.SOURCE USING(SOURCE_ID)\nWHERE PROCESS.USECASE_ID = @{pipeline().parameters.usecase_id}\nAND PROCESS.PHASE_ID = @{pipeline().parameters.phase_id}\nAND PROCESS.SEQUENCE_ID = @{pipeline().parameters.sequence_id}\nAND PROCESS.IS_ACTIVE = TRUE\nORDER BY PROCESS.SEQUENCE_ID ASC;",
							"type": "Expression"
						},
						"exportSettings": {
							"type": "SnowflakeExportCopyCommand"
						}
					},
					"dataset": {
						"referenceName": "mtd_process",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For each process",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get processes",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get processes').output.value",
						"type": "Expression"
					},
					"batchCount": 10,
					"activities": [
						{
							"name": "decide source",
							"description": "Decide which Source Activity to use based on the source_type parameter",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@item().source_type",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "SFTP",
										"activities": [
											{
												"name": "SFTP ingestion",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "SFTP",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"category": {
															"value": "@pipeline().parameters.category",
															"type": "Expression"
														},
														"usecase_id": {
															"value": "@pipeline().parameters.usecase_id",
															"type": "Expression"
														},
														"sequence_id": {
															"value": "@pipeline().parameters.sequence_id",
															"type": "Expression"
														},
														"process_id": {
															"value": "@item().usecase_id",
															"type": "Expression"
														},
														"phase_id": {
															"value": "@pipeline().parameters.phase_id",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "ADLS",
										"activities": [
											{
												"name": "ADLS ingestion",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "ADLS",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"category": {
															"value": "@pipeline().parameters.category",
															"type": "Expression"
														},
														"usecase_id": {
															"value": "@pipeline().parameters.usecase_id",
															"type": "Expression"
														},
														"sequence_id": {
															"value": "@pipeline().parameters.sequence_id",
															"type": "Expression"
														},
														"process_id": {
															"value": "@item().process_id",
															"type": "Expression"
														},
														"phase_id": {
															"value": "@pipeline().parameters.phase_id",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "SQL Server",
										"activities": [
											{
												"name": "SQL Server ingestion",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "SQL Server",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"category": {
															"value": "@pipeline().parameters.category",
															"type": "Expression"
														},
														"usecase_id": {
															"value": "@pipeline().parameters.usecase_id",
															"type": "Expression"
														},
														"sequence_id": {
															"value": "@pipeline().parameters.sequence_id",
															"type": "Expression"
														},
														"process_id": {
															"value": "@item().process_id",
															"type": "Expression"
														},
														"phase_id": {
															"value": "@pipeline().parameters.phase_id",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "MDS",
										"activities": [
											{
												"name": "MDS ingestion",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "MDS",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"category": {
															"value": "@pipeline().parameters.category",
															"type": "Expression"
														},
														"usecase_id": {
															"value": "@pipeline().parameters.usecase_id",
															"type": "Expression"
														},
														"sequence_id": {
															"value": "@pipeline().parameters.sequence_id",
															"type": "Expression"
														},
														"process_id": {
															"value": "@item().process_id",
															"type": "Expression"
														},
														"phase_id": {
															"value": "@pipeline().parameters.phase_id",
															"type": "Expression"
														}
													}
												}
											}
										]
									},
									{
										"value": "Snowflake",
										"activities": [
											{
												"name": "MDS_reverse_sync",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "MDS_Reverse_Sync",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"category": {
															"value": "@pipeline().parameters.category",
															"type": "Expression"
														},
														"usecase_id": {
															"value": "@pipeline().parameters.usecase_id",
															"type": "Expression"
														},
														"sequence_id": {
															"value": "@pipeline().parameters.sequence_id",
															"type": "Expression"
														},
														"process_id": {
															"value": "@item().process_id",
															"type": "Expression"
														},
														"phase_id": {
															"value": "@pipeline().parameters.phase_id",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "Unknown source",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": {
												"value": "Unknown source type: @{item().source_type}",
												"type": "Expression"
											},
											"errorCode": "2000"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "audit start",
				"type": "ExecutePipeline",
				"dependsOn": [],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": 0,
						"status": "START",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline is executing for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit_Finish_Success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "For each process",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": 0,
						"status": "FINISH",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline is completed for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit_Finish_Fail_LKP",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "get processes",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": 0,
						"status": "FAIL",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline has failed for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Audit_Finish_Fail_Foreach",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "For each process",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "write_audit_log",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"process_id": 0,
						"status": "FAIL",
						"input_row_count": 0,
						"output_row_count": 0,
						"jobname": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"message": {
							"value": "@concat(pipeline().Pipeline,' pipeline has failed for use case ', string(pipeline().parameters.category))",
							"type": "Expression"
						},
						"runid": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"pipeline_id": {
							"value": "@pipeline()?.TriggeredByPipelineRunId",
							"type": "Expression"
						},
						"category": {
							"value": "@pipeline().parameters.category",
							"type": "Expression"
						},
						"usecase_id": {
							"value": "@pipeline().parameters.usecase_id",
							"type": "Expression"
						},
						"phase_id": {
							"value": "@pipeline().parameters.phase_id",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"sequence_id": {
				"type": "int"
			},
			"usecase_id": {
				"type": "int"
			},
			"phase_id": {
				"type": "int"
			},
			"category": {
				"type": "string"
			}
		},
		"variables": {
			"Isunknown": {
				"type": "Boolean"
			},
			"adls_container": {
				"type": "String"
			},
			"folder_path": {
				"type": "String"
			},
			"target_table": {
				"type": "String"
			},
			"target_schema": {
				"type": "String"
			},
			"file_spec": {
				"type": "String"
			},
			"stage": {
				"type": "String"
			},
			"file_format": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Ingestion"
		},
		"annotations": [],
		"lastPublishTime": "2023-11-28T12:21:03Z"
	}
}